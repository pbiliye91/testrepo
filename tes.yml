schedules:
- cron: '10 11 * * 1-5'
  displayName: Weekday Starting Schedule
  branches:
    include:
      - 'main'
  always: true
 
- cron: '03 11 * * *'
  displayName: Daily Stopping Schedule
  branches:
    include:
      - 'main'
  always: true
 
parameters:
  - name: ServiceConnection
    displayName: Service Connection Name Follows Below:-
    default: tes-vm-sc
    values:
      - tes-vm-sc
  - name: image
    displayName: PoolImage
    default: windows-latest
    type: string
    values:
      - windows-latest
      - ubuntu-latest
  - name: action
    displayName: Start/Stop vms
    type: string
    values:
    - start
    - stop
    - scheduled # Dummy value for scheduler
    default: scheduled
 
variables:
- group: startstop
- name: clientidvar
  value: $[variables.clientid]
- name: secretvaluevar
  value: $[variables.secretvalue]
- name: tenantidvar
  value: $[variables.tenantid]
- name: subscriptionvar
  value: $[variables.subscription]
- name: BuildAgent
  value: ${{ parameters.image }}
- name: Environment
  value: test
- name: ResourceGroup
  value: mcmd-dev-rg
- name: StorageAccount
  value: samlinkstorage1234
- name: Container
  value: test-vm
- name: TfstateFile
  value: test-vm/terraform.tfstate
 
trigger:
- none
 
pool:
  vmImage: $(BuildAgent)
 
 
stages:
- ${{ if or(eq(parameters.action, 'stop'),  eq(variables['Build.CronSchedule.DisplayName'], 'Daily Stopping Schedule')) }}:
  - stage: stop
    displayName: Stop
    jobs:
    - job: Stop_vms
      displayName:  Stopping vms
      steps:

      - powershell: |
          az login --service-principal -u $(clientidvar) -p $(secretvaluevar) --tenant $(tenantidvar)
          az account set --subscription $(subscriptionvar)
          $results = az vm list --query "[].id" --output json | ConvertFrom-Json
          Write-Host "VM IDs: $($results -join ', ')"  # Add this line for debugging
          foreach ($vm_id in $results) {
           az vm deallocate --no-wait --ids $vm_id
          }
        displayName: 'Stop VMs' 
 
- ${{ if or(eq(parameters.action, 'start'), eq(variables['Build.CronSchedule.DisplayName'], 'Weekday Starting Schedule')) }}:
  - stage: start
    displayName: Start
    jobs:
    - job: Start_vms
      displayName:  Starting vms
      steps:
 
      - powershell: |
          az login --service-principal -u $(clientidvar) -p $(secretvaluevar) --tenant $(tenantidvar)
          az account set --subscription $(subscriptionvar)
          $results = az vm list --query "[].id" --output json | ConvertFrom-Json
          Write-Host "VM IDs: $($results -join ', ')"  # Add this line for debugging
          foreach ($vm_id in $results) {
           az vm start --no-wait --ids $vm_id
          }
        displayName: 'Start VMs' 